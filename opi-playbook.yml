# vim: set ft=ansible
- hosts: oranges
  remote_user: root
  vars:
    max_cpu_freq: 1000000
    max_ram_freq: 600mhz
    max_cpu_cores: 4
    root_password: "$6$2Ze2W4nQf1IBxA/$mR/zNWA/KJJWe9vn6Irl8dx..Ntp2NOzTNulqgR3aAJJxgh0Vhj6dve7D6Q8IEiYg9/MgyctxwyOd2zgW7QPA/"
    root_keys:
        - "ecdsa-sha2-nistp384 AAAAE2VjZHNhLXNoYTItbmlzdHAzODQAAAAIbmlzdHAzODQAAABhBAOeBfS1BakTxbEsu03pBkx+V2exaF9wvsmYA2X1/X4BBpoG1eOz7Tg3kapzXeCVDX+xWnGIkeJ3pzsHd8p4p6Qs7U3zsr9QPJugw5dHqbASkSfnnUAmZI/TMGVtkaVL0w== jan@JuiceSSH"
        - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEHuaqkHW/BGaz0th7nU8+fCngLzXZwhWOdTCyVLCDga jan@brettchen"
    wifi_passwd: tent_controller_wifi
    network: "10.33.33.1/24"
    controller_ip: "{{ network|ipaddr(1) }}"
    microcontrollers:
      led:
        ip: "{{ network|ipaddr(10) }}"
        devices:
          - "5c:cf:7f:f8:48:65"
        data_port: 7000
        control_port: 7001
      gyro:
        ip: "{{ network|ipaddr(20) }}"
        devices:
          - "5c:cf:7f:f8:47:ae"
          - "5c:cf:7f:ff:42:6a"
        data_port: 7002
    syslog_port: 6656
    update_port: 6655
    sw_user: tent
    repos:
      controller: "https://github.com/Retardigrades/tent-update-controller.git"
      visuals:  "https://github.com/Retardigrades/visuals.git"
    ir_proc: tent-ir
    ir_commands:
      - name: none
        url: /none
        buttons:
          - button: A_POWER
            repeat: 2
          - button: A_AV
            repeat: 2
          - button: B_POWER
            repeat: 2
          - button: B_AV
            repeat: 2

      - name: vol-down
        url: /music/voldown
        buttons:
          - button: A_MINUS
            repeat: 2
          - button: B_MINUS
            repeat: 2

      - name: vol-up
        url: /music/volup
        buttons:
          - button: A_PLUS
            repeat: 2
          - button: B_PLUS
            repeat: 2

      - name: next-song
        url: /music/next
        buttons:
          - button: A_DOWN
          - button: B_DOWN

      - name: next-effect
        url: /effect/next
        buttons:
          - button: A_UP
          - button: B_UP

    venv_home: "/home/{{ sw_user }}/venv"
    visuals_dir: "/home/{{ sw_user }}/visuals"
    controller_dir: "/home/{{ sw_user }}/controller"
    firmware_dir: "/home/{{ sw_user }}/firmware"
    firmware:
      - name: led_fw
        file: led/firmware.bin
      - name: gyro_fw
        file: gyro/firmware.bin
    music:
      mount: /dev/sda
      mountpoint: /mnt/music
      path: oggtent

  tasks:

    - name: set hostname
      hostname: name={{ inventory_hostname }}
      tags:
        - base

    - name: set root password
      user:
        name: root
        password: "{{ root_password }}"

    - name: add root ssh keys
      authorized_key:
        user: root
        key: "{{ item }}"
        state: present
      with_items: root_keys
      tags:
        - base

    - name: update system
      apt:
        update_cache: yes
        upgrade: yes
      tags:
        - upgrade
        
    - name: install packages
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - vim
        - tmux
        - bridge-utils
        - hostapd
        - dnsmasq
        - firmware-atheros
        - firmware-realtek
        - cmake
        - libvorbis-dev
        - portaudio19-dev
        - python3-virtualenv
        - virtualenv
        - libboost-program-options-dev
        - libboost-filesystem-dev
        - libboost-system-dev
        - python3-dev
        - liblircclient-dev
        - lirc
      tags:
        - base

    - name: turn gpu off
      command: /usr/bin/h3consumption -g off
      tags:
        - base

    - name: lower mem speed
      command: /usr/bin/h3consumption -d {{ max_ram_freq }}
      tags:
        - base

    - name: set max cpu cores
      command: /usr/bin/h3consumption -c {{ max_cpu_cores }}
      tags:
        - base

    - name: set max cpu speed
      template:
        src: etc/default/cpufrequtils
        dest: /etc/default/cpufrequtils
      tags:
        - base

    - name: set hostapd defaults
      template:
        src: etc/default/hostapd
        dest: /etc/default/hostapd
      tags:
        - ap

    - name: create directory for ansible custom facts
      file: state=directory recurse=yes path=/etc/ansible/facts.d
      tags:
        - ap

    - name: install wpa psk fact
      template:
        src: etc/ansible/facts.d/wpa_psk.fact
        dest: /etc/ansible/facts.d/wpa_psk.fact
        mode: 0755
      register: _wpa_fact
      tags:
        - ap

    - name: reread facts
      setup: filter=ansible_local
      when: _wpa_fact|changed
      tags:
        - ap

    - name: set hostapd config
      template:
        src: etc/hostapd.conf
        dest: /etc/hostapd.conf
      tags:
        - ap

    - name: install interfaces
      template:
        src: etc/network/interfaces
        dest: /etc/network/interfaces
      register: _networking
      tags:
        - ap

    - name: networking restart
      service:
        name: networking
        state: restarted
      tags:
        - ap
      when: _networking|changed

    - name: restart hostapd
      service:
        name: hostapd.service
        state: restarted
        enabled: true
      tags:
        - ap

    - name: generate hosts entries
      lineinfile:
        dest: /etc/hosts
        regexp: "{{ item.name | replace('.', '\\.') }}"
        line: "{{ item.ip | ipaddr('address') }} {{ item.name }}"
      with_items:
        - name: led
          ip: "{{ microcontrollers.led.ip }}"
        - name: gyro
          ip: "{{ microcontrollers.gyro.ip }}"
        - name: controller
          ip: "{{ network | ipaddr('1') }}"
      tags:
        - ap

    - name: install dnsmasq config
      template:
        src: etc/dnsmasq.conf
        dest: /etc/dnsmasq.conf
        backup: yes
      register: _dnsmasq_config
      tags:
        - ap

    - name: restart dnsmasq
      service:
        name: dnsmasq.service
        state: restarted
        enabled: true
      when: _dnsmasq_config|changed
      tags:
        - ap

    - name: make sure we do not override resolv.conf
      ini_file:
        path: /etc/NetworkManager/NetworkManager.conf
        section: main
        option: dns
        value: "none"
        backup: yes
      register: _nm_config
      tags:
        - ap

    - name: restart network manager
      service:
        name: NetworkManager.service
        state: restarted
        enabled: yes
      when: _nm_config|changed
      tags:
        - ap

    - name: remove Network Manager resolv.conf
      file:
        path: /etc/resolv.conf
        state: absent
      when: _nm_config|changed
      tags:
        - ap

    - name: setup resolv.conf
      template:
        src: etc/resolv.conf
        dest: /etc/resolv.conf
      tags:
        - ap
          
    - name: setup resolv.conf.google
      template:
        src: etc/resolv.conf.google
        dest: /etc/resolv.conf.google
      tags:
        - ap

    - name: sync filesystem
      command: /bin/sync
      tags:
        - base
        - ap


    - name: setup syslog for udp
      template:
        src: etc/rsyslog.d/udp.conf
        dest: /etc/rsyslog.d/udp.conf
      tags:
        - software

    - name: restart syslog
      service:
        name: rsyslog.service
        state: restarted
        enabled: true
      tags:
        - software

    - name: add user for tent software
      user:
        name: "{{ sw_user }}"
        groups: audio,dialout,plugdev
        shell: /bin/bash
        state: present
      tags:
        - software

    - name: setup lirc
      copy:
        src: etc/lirc/lircd.conf
        dest: /etc/lirc/lircd.conf
      tags:
        - software

    - name: install user lirc config
      template:
        src: home/.lircrc
        dest: "/home/{{ sw_user }}/.lircrc"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: set up virtualenv
      pip:
        virtualenv: "{{ venv_home }}"
        virtualenv_python: python3
        name: "{{ item }}"
      with_items:
        - Flask
        - python-lirc
        - requests
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Setup controller software repo
      git:
        repo: "{{ repos.controller }}"
        dest: "{{ controller_dir }}"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Setup visuals software repo
      git:
        repo: "{{ repos.visuals }}"
        dest: "{{ visuals_dir }}"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Create visuals build dir
      file:
        name: "{{ visuals_dir }}/build"
        state: directory
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Run Cmake
      command: "cmake -D CMAKE_BUILD_TYPE=Release .."
      args:
        chdir: "{{ visuals_dir }}/build"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Run Make
      command: "make -j3"
      args:
        chdir: "{{ visuals_dir }}/build"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Create music mountpoint
      file:
        name: "{{ music.mountpoint }}"
        mode: 777
        state: directory
      ignore_errors: yes
      tags:
        - software

    - name: Add music to fstab
      mount:
        src: "{{ music.mount }}"
        path: "{{ music.mountpoint }}"
        fstype: vfat
        state: present
        opts: ro
      tags:
        - software

    - name: Create visuals systemd file
      template:
        src: etc/systemd/system/visuals.service
        dest: /etc/systemd/system/visuals.service
      tags:
        - software

    - name: Create remote systemd file
      template:
        src: etc/systemd/system/remote_control.service
        dest: /etc/systemd/system/remote_control.service
      tags:
        - software

    - name: make firmware dir
      file:
        name: "{{ firmware_dir }}"
        state: directory
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: copy firmware files
      copy:
        src: firmware/
        dest: "{{ firmware_dir}}"
      become: true
      become_user: "{{ sw_user }}"
      tags:
        - software

    - name: Create updater systemd file
      template:
        src: etc/systemd/system/firmware_updater.service
        dest: /etc/systemd/system/firmware_updater.service
      tags:
        - software

    - name: Restart services
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true
        daemon_reload: yes
      with_items:
        - remote_control.service
        - visuals.service
        - firmware_updater.service
      tags:
        - software
